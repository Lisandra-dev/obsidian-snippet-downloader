name: Manually release

on:
  workflow_dispatch

env:
    PLUGIN_NAME: obsidian-snippet-downloader # Change this to match the id of your plugin.

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
            node-version: "14.x"
      - name: Release
        id: release
        run: |
            git config --global user.name 'github-release'
            git config --global user.email 'github-release@users.noreply.github.com' 
            npm install
            npm run release
            git push --follow-tags origin master
  
  build:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Latest-tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
      - name: Build
        id: build
        run: |
            npm install
            npm run build
            mkdir ${{ env.PLUGIN_NAME }}
            cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
            zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
            ls
            echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
            npx rexreplace "^.*?#+\s\[.*?\n.*?(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG.md" > CHANGELOG-LATEST.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ steps.get-latest-tag.outputs.tag }}
          release_name: ${{ steps.get-latest-tag.outputs.tag }}
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: false
      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
          asset_content_type: application/zip
      - name: Upload main.js
        id: upload-main
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript
      - name: Upload manifest.json
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
